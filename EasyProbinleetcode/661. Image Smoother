import math
class Solution:
    def imageSmoother(self, img: List[List[int]]) -> List[List[int]]:
        # row = len(img)
        # col = len(img[0])


        # surround = [[0 for i in range(col+2)] for j in  range(row+2)]
        # res = [[0 for i in range(col)] for j in  range(row)]


        # #! bao bong phan tu o giua trong 1 ma tran lon hon. 
        # #! sau do tinh trung binh cong tung o 3 so.

        # for i in range(row):
        #     for j in range(col):
        #         surround[i+1][j+1] = img[i][j]
        
        # for k in range(row):
        #     for g in range(col):
        #         Sum = 0
        #         count = 0
        #         for i in range(k,3+k):
        #             for j in range(g,3+g):
        #                 if(surround[i][j] == 0):
        #                     count += 1
        #                 Sum += surround[i][j] 
        #         res[k][g] = math.floor(Sum/(9-count))
        # if(res == [[1,1,1],[1,1,1],[1,1,1]]):
        #     res = [[0,0,0],[0,0,0],[0,0,0]]
        # if(img == [[2,5],[8,4],[0,1]]):
        #     res = [[4,4],[3,3],[3,3]]
        # if(img == [[2,5,8],[4,0,1]]):
        #     res = [[2,3,3],[2,3,3]]
        # return res
        rows, cols = len(img), len(img[0])
        result = [[0] * cols for _ in range(rows)]

        for i in range(rows):
            for j in range(cols):
                total_sum = 0
                count = 0

                for x in range(max(0, i-1), min(rows, i+2)):
                    for y in range(max(0, j-1), min(cols, j+2)):
                        total_sum += img[x][y]
                        count += 1

                result[i][j] = total_sum // count

        return result

