#! solution 1:
# import numpy as np
# class Solution:
#     def maxWidthOfVerticalArea(self, points: List[List[int]]) -> int:
#         res = np.zeros(len(points))
#         for i, point in enumerate(points):
#             res[i] = point[0]

#         res.sort()
#         max = -999
#         subtract = 0
#         for i in range(len(res)-1,0,-1):
#             subtract = res[i]-res[i-1]
#             if(max < subtract):
#                 max = subtract
#         return int(max)
#! solution 1 nhưng theo chiều hướng khác
# import numpy as np
# class Solution:
#     def maxWidthOfVerticalArea(self, points: List[List[int]]) -> int:
#         res = np.zeros(len(points))
#         for i in range(len(points)):
#             res[i] = points[i][0]
#         res.sort()
#         max = -999
#         subtract = 0
#         for i in range(len(res)-1,0,-1):
#             subtract = res[i]-res[i-1]
#             if(max < subtract):
#                 max = subtract
#         return int(max)
#! solution 3: không cần lấy ra phần tử đầu tiên, trừ thẳng trong mảng 2 chieeuf:
class Solution:
    def maxWidthOfVerticalArea(self, points: List[List[int]]) -> int:
        points.sort(key=lambda x: x[0])
        max_width = -999
        for i in range(len(points)-1,0,-1):
            width = points[i][0] - points[i-1][0]
            max_width = max(max_width,width)
        return max_width
        
