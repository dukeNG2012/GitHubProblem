/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(root == null)
        {
            System.out.println("This is my root is null");
            return res;
        }
        q.add(root);
        System.out.println("This is my q after add root: " + q  + "\n");
        while(!q.isEmpty())
        {
            int levels = q.size();
            System.out.println("This is my q size: " + levels + "\n");
            List<Integer> sublevels = new ArrayList<>();
            for(int i = 0; i < levels; ++i)
            {  
                if(q.peek().left != null)
                {
                    q.add(q.peek().left);
                }
                if(q.peek().right != null)
                {
                    q.add(q.peek().right);
                }
                    sublevels.add(q.remove().val);
                    System.out.println("This is my sublevel: " + sublevels + "\n");
            }
            res.add(sublevels);
            
        }
        
        return res;
    }
}
