class Solution {
    public int expandpalid(String s, int i, int j)
    {
        if(s == null || i > j)
        {
            return 0;
        }
        while(i >= 0 && j < s.length() && s.charAt(i) == s.charAt(j))
        {
            i--;
            j++;
        }
        return j-i-1;
    }
    public String longestPalindrome(String s) {
        if(s == null || s.length() < 1)
        {
            return "";
        }
        int start = 0;
        int end = 0;
        for(int i = 0; i < s.length(); ++i)
        {
            int len1 = expandpalid(s,i,i); // trường hợp có từ ở giữa không trùng với từ nào
            int len2 = expandpalid(s,i,i+1); // trường hợp có 2 từ ở giữa giống nhau.
            int len = Math.max(len1,len2);
            if(len > end-start)
            {
                start = i - ((len-1)/2);
                end = i + ((len)/2);
            }
        }
        return s.substring(start,end+1);
    }
}
