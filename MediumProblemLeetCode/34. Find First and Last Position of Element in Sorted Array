class Solution {
    private int binarySearch(int[] nums, int target, boolean findleft)
    {
        int left = 0;
        int right = nums.length-1;
        int index = -1;
        while(left <= right)
        {
            int mid = left + (right-left)/2;
            if(nums[mid] == target)
            {
                index =  mid;
                if(findleft)
                {
                    right = mid-1;
                }
                else
                {
                    left = mid+1;
                }
            }
            else if(nums[mid] > target)
            {
                right = mid-1;
            }
            else
            {
                left = mid+1;
            }
        }
        return index;
    }
    public int[] searchRange(int[] nums, int target) {
        int left = binarySearch(nums,target,true);
        int right = binarySearch(nums,target,false); // check phần right == false tại vì nếu mình cho left <= right thì: [6,5,8,8,0] thì nó luôn tìm ra
// số 8 đằng sau trước và bỏ qua số 8 đằng trước :///
        if(left <= right)
        {
            return new int[]{left,right};
        }
        else
        {
            return new int[]{-1,-1};
        }
    }
}
